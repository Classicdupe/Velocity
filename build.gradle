plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'xyz.prorickey.velocityplugin'
version '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://mvn-repo.arim.space/lesser-gpl3/' }
    maven { url 'https://mvn-repo.arim.space/gpl3/' }
    maven { url 'https://mvn-repo.arim.space/affero-gpl3/' }
}

dependencies {
    compileOnly 'com.velocitypowered:velocity-api:3.1.1'
    annotationProcessor 'com.velocitypowered:velocity-api:3.1.1'

    compileOnly 'space.arim.libertybans:bans-api:1.1.0-SNAPSHOT'

    compileOnly 'net.kyori:adventure-text-minimessage:4.13.1'
    compileOnly 'net.dv8tion:JDA:5.0.0-beta.5'
    compileOnly 'org.yaml:snakeyaml:2.0'
    compileOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
}

shadowJar {
    archiveClassifier = null
}

jar {
    enabled = false
    dependsOn(shadowJar)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}